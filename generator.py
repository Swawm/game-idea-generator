from tkinter import *
from tkinter import messagebox
import random


def show_message():
    
    if (message.get() == "") or (int(message.get()) > 100):
        messagebox.showinfo("Ошибка", "Введите количество механик < 100")
    elif int(message.get() == 0):
        messagebox.showinfo("Ошибка", "Удачи с этим")
    else:
        messagebox.showinfo("Прототип", generate_game())

        
def generate_game():
    
    features = ["Здоровье как валюта",
                "Туман войны",
                "Меню, вписанное в игровой мир",
                "Красные бочки",
                "Редактируемый мир, как в Minecraft",
                "Гибкое создание кастомного оружия",
                "Сохранение в кровати\дома персонажа",
                "Bullet hell",
                "Сложные взаимоотношения между NPC",
                "Изменение цвета уровня, как в Shift",
                "Появление после смерти игрока призрака-врага",
                "Интересная внезапная смерть (поднятие уровня воды в Worms)",
                "Bridge Constructing",
                "Заражение территории, которое дает приемущество",
                "Rhythm-based игра (Crypt of the Necrodancer)",
                "Показ статистии других игроков после игры",
                "Игра, идущая, когда игрок в нее не играет (кликеры)",
                "Ферма",
                "Программирование в том или ином виде",
                "Undo-механика",
                "Вертикальные лестницы",
                "Аптечки за убийство врагов в ближнем бою",
                "Выбор сложности",
                "Комбо",
                "Baba is You",
                "Physics gun",
                "Airport management",
                "Удача как параметр",
                "Динамическая сложность",
                "Элементы кликера",
                "Деньги за ачивки",
                "Престиж (НГ+)",
                "Динамические предметы в сундуках",
                "Диалоги, не прерывающие геймплей",
                "Управление пулей от 1 лица",
                "Самоиграемая игра над match-3",
                "Изменение размера персонажа (Марио, agar.io)",
                "Ограниченное дыхание под водой",
                "Динамический саундтрек, строящийся из звуков игрока",
                "Подведение игрока к аморальным решениям",
                "Хайлайты",
                "Полоска психологического здоровья персонажа",
                "Редактор уровней",
                "Раскрашивание уровня (Splatoon)",
                "Стрельба навесом с траекторием",
                "Змейка",
                "Камеры наблюдения",
                "Использования гироскопа",
                "Дроны или питомцы для разведки территории",
                "Мини игра для перезардки",
                "Мини-игра для открытия замков",
                "Рестарт игры как часть геймплея",
                "Второй параллельный мир, который открывается маской",
                "Грифинг",
                "Отобрать какие-то привычные элементы управления у игрока",
                "Рисование жеста мышкой или пальцем, для каста спелла",
                "Локал кооп\сплит-скрин",
                "Элементы Tower-Defence",
                "Крафтинг",
                "Вампиризм",
                "Движущиеся бесшовные корабли",
                "Показ неудачных попыток прохождения",
                "Враги, запоминающие игрока после смерти",
                "Поворот 2D мира из Fez",
                "Враг, которые несколько раз делится пополам при убийстве",
                "Кража личности NPC",
                "Путешествие к телу духом для воскрешения",
                "Автоматизация\индустриализация",
                "Возможность забраться на гигантского врага",
                "Переключение персонажей в любой момент",
                "Планетарная гравитация",
                "Коллекционирование",
                "Батарейки в фонарике",
                "Перемещение игрока, когда он не может остановиться",
                "Огромное дерево прокачки",
                "Рассказчик сюжета",
                "Уничтожаемый взрывами мир",
                "Цепляющиеся крюки",
                "Переключение режимов юнита",
                "Изменение свойств предметов перемещением во времени",
                "Смена дня и ночи",
                "Кор механика Superhot",
                "Использование геолокации в мобильных играх",
                "Переключение между таймлайнами",
                "Транспорт, в который можно сесть",
                "Ассиметричное пвп",
                "Откат времени",
                "Постройка уровня на ходу",
                "Бесшовные порталы",
                "Возвращение назад по тому же уровню",
                "Дейлики",
                "Скалолазание",
                "Невозможные геометрические фигуры в левел дизайне",
                "Механика на внимательное чтение инфы",
                "Рисование частей уровня пальцем",
                "Perma-death",
                "Хитрый прыжок (двойной, тройной, от стены)",
                "Мини-игра внутри игры",
                "Динамическая система союзников и врагов",
                ]

    random.shuffle(features)
    string = ""
    i = 0
    while i < int(message.get()):
        string = string + features[i] + '\n'
        i = i + 1
    return string

    
root = Tk()
root.title("Генератор прототипов")
root.geometry("350x80")
 
message = StringVar()
 
message_entry = Entry(textvariable=message)
message_entry.place(relx=.5, rely=.2, anchor="c")
 
message_button = Button(text="Сгенерировать прототип", command=show_message)
message_button.place(relx=.5, rely=.5, anchor = 'c')
 
root.mainloop()






